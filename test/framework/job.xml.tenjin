<?xml version='1.0' encoding='UTF-8'?>
<?py param_names = [param[0] for param in params] ?>
<project>
  <actions/>
  <description></description>
  <logRotator class="hudson.tasks.LogRotator">
    <daysToKeep>-1</daysToKeep>
    <numToKeep>4</numToKeep>
    <artifactDaysToKeep>-1</artifactDaysToKeep>
    <artifactNumToKeep>-1</artifactNumToKeep>
  </logRotator>
  <keepDependencies>false</keepDependencies>
  <properties>
    <?py if params: ?>    
    <hudson.model.ParametersDefinitionProperty>
      <parameterDefinitions>
        <?py seen = set() ?>
        <?py for param in params: ?>
        <?py     if param[0] in seen: ?>
        <?py         raise Exception("Respecified param: " + param[0]) ?>
        <?py         #endif ?>
        <?py     seen.add(param[0]) ?>
        <?py     if isinstance(param[1], (str, int)): ?>
        <?py         # assume string param ?>
        <?py         if 'passw' in param[0].lower(): ?>
        <hudson.model.PasswordParameterDefinition>
          <name>{==param[0]==}</name>
          <description>{==param[2]==}</description>
          <defaultValue>{==str(param[1])==}</defaultValue>
        </hudson.model.PasswordParameterDefinition>
        <?py         else: ?>
        <hudson.model.StringParameterDefinition>
          <name>{==param[0]==}</name>
          <description>{==param[2]==}</description>
          <defaultValue>{==str(param[1])==}</defaultValue>
        </hudson.model.StringParameterDefinition>
        <?py         #endif ?>
        <?py     elif isinstance(param[1], bool): ?>
        <hudson.model.BooleanParameterDefinition>
          <name>{==param[0]==}</name>
          <description>{==param[2]==}</description>
          <defaultValue>{==str(param[1]).lower()==}</defaultValue>
        </hudson.model.BooleanParameterDefinition>
        <?py     else: ?>
        <?py         # assume choice param ?>
        <hudson.model.ChoiceParameterDefinition>
          <name>{==param[0]==}</name>
          <description>{==param[2]==}</description>
          <choices class="java.util.Arrays$ArrayList">
            <a class="string-array">
              <?py for choice in param[1]: ?>
              <string>{==choice==}</string>
              <?py #endfor ?>
            </a>
          </choices>
        </hudson.model.ChoiceParameterDefinition>
        <?py     #endif ?>
        <?py #endfor ?>
      </parameterDefinitions>
    </hudson.model.ParametersDefinitionProperty>
    <?py #endif ?>
  </properties>
  <scm class="hudson.scm.NullSCM"/>
  <canRoam>true</canRoam>
  <disabled>false</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <authToken>{==securitytoken==}</authToken>
  <triggers/>
  <concurrentBuild>false</concurrentBuild>
  <builders>
    <hudson.tasks.Shell>
      <command>#!/bin/bash
set -u
<?py if script is not None: ?>
{==script==}
<?py else: ?>
echo sleeping={==exec_time==}
sleep {==exec_time==}
<?py #endif ?>
<?py if 'force_result' in param_names: ?>
[[ $force_result == SUCCESS ]] &amp;&amp; exit 0
[[ $force_result == FAILURE ]] &amp;&amp; exit 1
[[ $force_result == UNSTABLE ]] &amp;&amp; /tmp/jenkinsflow/set_build_result.py --username {==username==} --password {==password==} || exit 1
<?py #endif ?>
      </command>
    </hudson.tasks.Shell>
  </builders>
  <publishers/>
  <buildWrappers/>
</project>
